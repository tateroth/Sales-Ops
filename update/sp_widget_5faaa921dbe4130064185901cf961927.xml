<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $http, nowServer, $timeout, spUtil, spModal, i18n, $window, spAriaUtil, nowAttachmentHandler, $log) {
	$scope.guide_step = 0;
	$scope.m = $scope.data.msgs;
	$scope.evaluatingIncludes = false;

	$scope.showItem = function(index) {
		if($scope.itemShown == index)
			$scope.itemShown = -1;
		else
			$scope.itemShown = index;
	}
	
	$scope.goPrev = function() {
		$scope.guide_step--;
	}
	
	$scope.toggleItemState = function(item) {
		if(item.included) {
			$scope.totalIncluded--;
			angular.element('#item_details_' + item.sys_id).find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').attr('tabindex', -1);
		}
		else {
			$scope.totalIncluded++;
			angular.element('#item_details_' + item.sys_id).find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').removeAttr('tabindex');
		}
	}
	
	$scope.goNext = function() {
		var gForm;
		if($scope.guide_step == 0) {
			gForm = includedGformInstances[$scope.data.sys_id];
			if(gForm.submit()) {
				evalIncludes();
				$scope.guide_step++;
				$scope.itemShown = 0;
			}
		}
		else if($scope.guide_step == 1) {
			var canSubmit = true;
			for (var i = 0; i < $scope.includedItems.length; i++) {
				if ($scope.includedItems[i].included) {
					gForm = includedGformInstances[$scope.includedItems[i].sys_id];
					if (gForm && !gForm.submit()) {
						canSubmit = false;
						$scope.includedItems[i].isOpen = true;
						$timeout(function(){
							var mandatory = $scope.includedItems[i]._mandatory;
							if (mandatory && mandatory.length > 0) {
								var elems = angular.element("[name*='" + mandatory[0].name + "']");
								if (elems && elems.length > 0) //set focus the first element
									elems[0].focus();
							}
						});
						break;
					}
				}
			}
			if(canSubmit) {
				evalGuidePrice();
				$scope.guide_step++;
			}
		}
	}
	
	// Breadcrumbs
	if ($scope.data.sc_cat_item) {
		$scope.data.categories.unshift({label: $scope.data.sc_catalog || $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page});
		$scope.data.categories.push({label: $scope.data.sc_cat_item.name, url: '#'});
		
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', $scope.data.categories);
		});
		spUtil.setSearchPage('sc');
	} else {
		var notFoundBC = [{label: $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page}];
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', notFoundBC);
		});
		spUtil.setSearchPage('sc');
	}

	var includedGformInstances = {};
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		includedGformInstances[gFormInstance.getSysId()] = gFormInstance;
	});
	
	$scope.$on('spModel.gForm.destroyed', function(e, sys_id){
		delete includedGformInstances[sys_id];
	});
	
	function getFieldsData(item) {
		var fieldData = {"variables":{}};
		for(var field in item._fields)
			fieldData.variables[item._fields[field].variable_name] = item._fields[field].value;
		return fieldData;
	}
	
	function getGuideItems(cartname) {
		var items = [];
		var item;
		for(var i = 0; i < $scope.includedItems.length; i++) {
			if($scope.includedItems[i].included) {
				item = getFieldsData($scope.includedItems[i]);
				item.sysparm_id = item.sysparm_active = $scope.includedItems[i].sys_id;
				item.sysparm_quantity = $scope.includedItems[i].quantity;
				item.sysparm_cart_name = cartname;
				item.sysparm_item_guid = $scope.includedItems[i].sysparm_item_guid;
				items.push(item);
			}
		}
		return items;
	}

	$scope.triggerAddToCart = function() {
		if($scope.submitted)
			return;
		$scope.server.get({
			action: 'log_request',
			itemDetails: {sys_id: $scope.data.sc_cat_item.sys_id, 
										name: $scope.data.sc_cat_item.name,
										sys_class_name: $scope.data.sc_cat_item.sys_class_name}
		});
		$scope.submitted = true;
		$scope.server.get({
			action: "add_to_cart",
			items: getGuideItems(""),
			sys_id: $scope.data.sys_id
		}).then(function(response) {
			$rootScope.$broadcast("$sp.service_catalog.cart.add_item");
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
			$scope.$emit("$sp.sc_order_guide.add_to_cart");
			
			spModal.open({
					message: i18n.getMessage('Items have been added successfully'),
					size: 'sm',
				  backdrop: 'static',
					keyboard: false,
				  noDismiss: true,
					buttons: [
							{label: i18n.getMessage('Catalog Home'), cancel:true},
							{label: i18n.getMessage('View Cart'), primary:true}
						]
			}).then(function() {
					$window.location.href = "?id=sc_cart";
				}, function() {
					$window.location.href = "?id=sc_home";
				})
			
		});
	}

	// order / create request
	$scope.triggerSubmit = function() {
		if ($scope.submitted)
			return;

		$scope.server.get({
			action: 'log_request',
			itemDetails: {sys_id: $scope.data.sc_cat_item.sys_id, 
										name: $scope.data.sc_cat_item.name,
										sys_class_name: $scope.data.sc_cat_item.sys_class_name}
		});

		$scope.submitted = true;
		if ($scope.data.sys_properties.twostep) {
			$scope.server.get({
				cart: '' + $scope.data.sys_id,
				items: getGuideItems('' + $scope.data.sys_id),
				action: "order_guide"
			}).then(function(response) {
				var orderGuideModalCtrl;
				var unregister = $scope.$on('$sp.service_catalog.cart.place_order', function(){
					orderGuideModalCtrl.close();
					$scope.submitted = false;
				});

				var orderGuideModal = angular.copy(response.data.orderGuideModal);
				orderGuideModal.options.afterOpen = function(ctrl){
					orderGuideModalCtrl = ctrl;
				};
				orderGuideModal.options.afterClose = function() {
					unregister();
					$scope.orderGuideModal = null;
					orderGuideModalCtrl = null;
				};
				$scope.orderGuideModal = orderGuideModal;
			});
		} else {
			$scope.server.get({
				action: 'checkout_guide',
				items: getGuideItems('' + $scope.data.sys_id),
				guide_id: $scope.data.sys_id
			}).then(function(response) {
				if (response && response.data && response.data.result && response.data.result.request_id)
					$window.location.href = "?id=sc_request&is_new_order=true&table=sc_request&sys_id=" + response.data.result.request_id;
				else
					spUtil.addInfoMessage('Thank you, your request has been submitted.');
			});
		}
	}

	function evalGuidePrice() {
		$scope.price = 0;
		var frequencyMap = {};
		for (var i = 0; i < $scope.includedItems.length; i++) {
			if ($scope.includedItems[i].included) {
				var pricing = $scope.includedItems[i]._pricing;
				var qty = parseInt($scope.includedItems[i].quantity);
				var effectivePrice = 0;
				var effectiveRecurringPrice = 0;
				
				if(typeof pricing.recurring_total != "undefined") {
					effectiveRecurringPrice = pricing.recurring_total;
				} else {
					effectiveRecurringPrice = pricing.recurring_price;
				}
				if (typeof pricing.price_total != "undefined") {
					effectivePrice = pricing.price_total;
				} else {
					effectivePrice = pricing.price;
				}
				
				if (effectiveRecurringPrice >= 0) {
					if(frequencyMap[pricing.rfd])
						frequencyMap[pricing.rfd] += effectiveRecurringPrice * qty;
					else
						frequencyMap[pricing.rfd] = effectiveRecurringPrice * qty;
				}
				if (effectivePrice >= 0)
					$scope.price += effectivePrice * qty;
			}
		}
		frequencyMap.price = $scope.price;
		$scope.server.get({
			action: "format_prices",
			prices: frequencyMap
		}).then(function(response) {
			$scope.frequencySequence = response.data.frequencySequence;
			$scope.price_display = response.data.frequencyMap.price;
			$scope.frequencyMap = response.data.frequencyMap;
			
		});
	}
	
	function evalIncludes() {
		// don't allow submit while waiting on included items eval
		$scope.evaluatingIncludes = true;
		$scope.includedItems = [];
		var guideData = getFieldsData($scope.data.sc_cat_item);
		guideData.sysparm_id = $scope.data.sys_id;
		guideData.without_cart = true;
		guideData._fields = $scope.data.sc_cat_item._fields;
		guideData.cascade = $scope.data.sc_cat_item.cascade;
		$scope.server.get({
			action: "init_guide",
			orderGuideData: guideData
		}).then(function(response) {
			$scope.includedItems = response.data.items;
			$scope.showIncludeToggle = response.data.showIncludeToggle;
			initAttachmentHandlers();
			$scope.totalIncluded = $scope.includedItems.length;
			$scope.evaluatingIncludes = false;
		});
	}
	
	$scope.$on('dialog.upload_too_large.show', function(e){
		$log.error($scope.m.largeAttachmentMsg);
		spUtil.addErrorMessage($scope.m.largeAttachmentMsg);
	});
	
	$scope.initAttachmentCallbacks = function (itemIndex) {
		$scope.includedItems[itemIndex].attachmentHandler.setAttachments = function (attachments, action) {
			$scope.includedItems[itemIndex].attachments = attachments;
			if (action === "renamed")
				spAriaUtil.sendLiveMessage($scope.m.renameSuccessMsg);
			if (action === "deleted")
				spAriaUtil.sendLiveMessage($scope.m.deleteSuccessMsg);
		};
		
		$scope.includedItems[itemIndex].confirmDeleteAttachment = function(attachment) {
			$rootScope.$broadcast("dialog.delete_attachment.show", {
				parms: {
					ok: function() {
						$scope.includedItems[itemIndex].attachmentHandler.deleteAttachment(attachment);
						$rootScope.$broadcast("dialog.delete_attachment.close");
					},
					cancel: function() {
						$rootScope.$broadcast("dialog.delete_attachment.close");
					},
					details: attachment.name
				}
			});
	  };
	}
	
	function initAttachmentHandlers() {
			var setAttachments;
			var appendError = function (error) {
					spUtil.addErrorMessage(error.msg + error.fileName);
			};
			for (var i = 0; i < $scope.includedItems.length; i++) {
				$scope.includedItems[i].attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
				$scope.includedItems[i].attachmentHandler.setParams($scope.includedItems[i].targetTable, $scope.includedItems[i].sysparm_item_guid, 1024 * 1024 * $scope.data.maxAttachmentSize);
			}
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.empty-state-content {
  margin-top: 30px;

  h3 {
    margin-bottom: 5px;
    text-align: center;
  }
}

.attachment-label {
  float: right;
  font-weight: normal;
  cursor: pointer;
}

.guide-image {
  max-height: 240px;
  padding: 5px;
  display: inline;
}

.panel-button {
  float: none;
}

.file-list-wrap {
	margin-bottom: 10px;
}

.guide-item-image {
  max-height: 150px;
  padding: 10px;
  display: inline-block !important;
}

.item-icon {

}

.disabled-mask {
  background-color: #F8F9F9;
  position: absolute;
  z-index: 8;
  opacity: 0.6;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  border-radius: 5px;
  cursor: not-allowed;
}

.guide-description, .guide-nav, .tab-item, .og-timeline {
  overflow: auto;
}


.guide-nav {
  padding: 0px 40px 20px 40px;
}

.guide-nav-setp1 {
  padding-right: 27px;
}

.iconlink {
  margin: 5px 0px 5px 0px;
}

.circle_icon {
    border: 3px solid;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    padding: 20px;
    display: inline-block;
    .step-icon {
      font-size: 20px;
    	position: relative;
    	top: -9px;
    	left: -10px;
    }
}

.step-text {
  	position: relative;
    top: -10px;
}

.step_active {
  color: $primary;
}

.step_inactive {
  color: $text-muted;
  opacity: 0.5;
}

.accordion-header {
  .panel-heading {
    padding: 0;
    .row {
      padding: 15px;
      margin: 0;
    }
    .align-text {
      top: 3px;
    }
    &amp;:hover {
    	background-color: lighten($primary, 45%);
  	}
  }
  &amp;.panel-open {
    .panel-heading {
      border-bottom: 1px solid #dee5e7;
      &amp;:hover {
    		background-color: transparent;
  		}
    }
  }
  .panel-title {
    	font-size: inherit;
  }
}

.list-group {
	padding-left: 28px;
  padding-right: 28px;
  padding-top: 10px;
  padding-bottom: 0px;
}

.accordion-icon {
  margin-left: 30px;
}


.mandatory-header {
  border-left: 3px #d9534f solid !important;
}

.mandatory-icon {
  color: #d9534f;
  margin-left: -9px
}

.timeline-container {
  position: sticky;
  position: -webkit-sticky;
  position: -ms-sticky;
  top: -($font-size-h2 + $font-size-base + 48px);
  z-index: 10;
  background-color: inherit;
  border-radius: 4px 4px 0 0;
}

.og-timeline .iconlink label {
  font-weight: 600;
  font-size: 0.8em;
  line-height: 1.8em;
}

.include-loader {
  text-align: center;
  
}

.og-switch {
  .input-switch {
    font-size: inherit;
    label.switch {
      border-radius: 20px;
      &amp;::before {
        border-radius: 20px;
      }
    }
    input[type=checkbox]:checked ~ .switch {
    	background-color: $primary; 
		}
  }
}

.summary {
  tr {
    height: 69px;
  }
  margin-bottom: 0;
  .summary-excluded {
    color: #ccc;
  }
  .not-included-pill {
    color: #FFF;
    background-color: #f0ad4e;
    border-radius: 20px;
    font-size: 11px;
    font-weight: bolder;
    white-space: nowrap;
  }
}

.m-r-6 {
  margin-right: 6px !important;
}

.wrap-word {
  word-break: break-word;
  hyphens: auto;
}

//animation

.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
  animation: fa-spin 1s infinite steps(8);
}

.options {
  color: $primary;
}


@media only screen and (max-width:992px) {
  .pull-left-xs {
    float: left !important;
  }
  
  .left-align-xs {
    text-align: left !important;
  }
  
  .padding-left-xs {
    padding-left:15px !important;
  }
  
  .iconlink {
    padding: 0 15px;
  }
  
  .wrapper-cart-xs {
    padding: 10px !important;
  }
  
  .not-included {
    padding: 3px !important;
  }
  
  .pull-right-xs {
    float: right !important;
  }
  
  .remove-margin-bottom-xs {
    margin-bottom: 0px !important;
  }
  
  .add-margin-bottom-xs {
    margin-bottom: 15px !important;
  }
  
  .list-group {
    padding-left: 13px !important;
    padding-right: 13px !important;
  }

  .border-top-xs {
    border-top: none;
  }
  
  .border-bottom-xs {
    border-bottom: none;
  }
  
  .button-image-xs {
    padding-left: 7%;
    line-height: 160%;
  }
  
  .guide-image {
    display: block;
    margin: auto;
    max-height: 220px
  }
  
  .og-switch {
    padding-top:10px;
    .input-switch {
      margin-left: 5px !important;
    }
    .input-switch input[type=checkbox]  ~ .switch {
       height: 20px;
       width: 35px
    }
    .input-switch input[type=checkbox]:checked  ~ .switch:before {
      left: 15.5px;
    }
   }
  .summary {
     tr {
         height: 33px;
      }
    .summary-excluded {
    	color: inherit;
  	}
  }
  .timeline-container {
    top: -($font-size-h2 + $font-size-base + 28px);
  }
  .guide-nav-setp1 {
    padding: 0 13px 20px 13px;
  }
	.timeline-container {
     position: inherit;
  }
  .included-xs {
    font-size:13px; 
    vertical-align:3px;
  }
  .panel-body {
    padding: 0;
  }
  .guide-item-image-xs {
    max-height: 120px;
  	padding: 10px;
    float: left;
  }
  .guide-description {
    display: inline;
  }
  .read-more, .read-less {
    font-size: 15px;
    cursor: pointer;
  }
  .more-text {
    display: none;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color,title</field_list>
        <has_preview>false</has_preview>
        <id>sc_order_guide_sales_portal</id>
        <internal>false</internal>
        <link/>
        <name>SC Order Guide Sales Portal</name>
        <option_schema>[{"hint":"This property will 'show less' description of order guide with an option of 'read more' to read full description.","name":"show_less_orderguide","default_value":"true","section":"other","label":"Enable Show More/Less for Order Guide description on Mobile","type":"boolean"},{"hint":"Show the widget in compact mode","name":"compact_mode","section":"Presentation","default_value":"false","label":"Compact Mode","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
	var guideJS;
	if(input && input.action == 'order_guide') {
		data.orderGuideModal = $sp.getWidget('widget-modal', {embeddedWidgetId: 'sc-checkout', embeddedWidgetOptions: {cart: {name: input.cart}, action: input.action, item: input.items, requested_for: {id:options.requested_for_id, displayValue:options.requested_for_display}}, backdrop: 'static', keyboard: false, size: 'md'});
		return;
	}
	else if (input && input.action === 'log_request') {
		 $sp.logStat('Cat Item Request', input.itemDetails.sys_class_name, input.itemDetails.sys_id, input.itemDetails.name);
		 return;
	}
	else if(input && input.action == "init_guide") {
		guideJS = new sn_sc.OrderGuide('' + input.orderGuideData.sysparm_id);
		var temp = guideJS.init(input.orderGuideData);
		data.showIncludeToggle = guideJS.isIncludeItems();
		data.items = [];
		var item;
		for(var i = 0; i < temp.items.length; i++) {
			var catItem = new sn_sc.CatItem('' + temp.items[i].sys_id);
			if(!catItem.canView() || !catItem.isVisibleServicePortal())
				continue;
			item = $sp.getCatalogItem({'sys_id': temp.items[i].sys_id, 'table': 'sc_cat_item', 'quantity': temp.items[i].quantity, 'is_guide': true});
			item.quantity = temp.items[i].quantity;
			item.show_quantity = temp.items[i].show_quantity;
			item.isOrderGuideItem = true;
			item.included = true;
			item.sysparm_item_guid = gs.generateGUID();
			
			var table_name = 'sc_cart_item';
			var className = item.sys_class_name;
			if (!new global.CatalogItemTypeProcessor().canCreateNormalCartItem(className)) {
				if (className == 'sc_cat_item_producer') {
					var gr = new GlideRecord('sc_cat_item_producer');
					if (gr.get(item.sys_id))
						table_name = gr.getValue('table_name');
				}
			}
			item.targetTable = table_name;
			if (input.orderGuideData.cascade) {
				for (var field in item._fields) {
					var f = item._fields[field];
					for (var gf in input.orderGuideData._fields) {
						if (input.orderGuideData._fields[gf].variable_name === f.variable_name) {
							f.value = input.orderGuideData._fields[gf].value;
							f.displayValue = input.orderGuideData._fields[gf].displayValue;
							f.display_value_list = input.orderGuideData._fields[gf].display_value_list;
							break;
						}
					}
				}
			}
			if (temp.variable_assignments[item.sys_id]) {
				var cur = temp.variable_assignments[item.sys_id];
				for (var fieldId in cur) {
					item._fields['IO:' + fieldId].value = cur[fieldId];
					var q = GlideappQuestion.getQuestion(fieldId);
					if (q.getType() == 21 || q.getType() == 8) {
						q.setValue(cur[fieldId]);
						if (q.getType() == 21) {
							var vals = '' + q.getDisplayValues();
							vals = vals.slice(1, -1);
							item._fields['IO:' + fieldId].display_value_list = vals.split(', ');
						}
					}
					item._fields['IO:' + fieldId].displayValue = q.getDisplayValue();
				}
			}
			data.items.push(item);
		}
		return;
	}
	else if(input && input.action == "checkout_guide") {
		guideJS = new sn_sc.OrderGuide('' + input.guide_id);
		var cartJS = new sn_sc.CartJS('' + input.guide_id);
		for(var i = 0; i < input.items.length; i++)
			guideJS.navigateFromMap(input.items[i]);
		cartJS.activateGuide();
		data.result = cartJS.checkoutGuide();
		return;
	}
	else if(input && input.action == "add_to_cart") {
		var cart = new sn_sc.CartJS();
		guideJS = new sn_sc.OrderGuide('' + input.sys_id);
		for(var i = 0; i < input.items.length; i++) {
			input.items[i].sysparm_cart_name = "";
			guideJS.navigateFromMap(input.items[i]);
		}
		if (guideJS.isUseCustomCart())
			new sn_sc.CartJS(input.sys_id).empty("");
		cart.activateGuide();
		return;
	}
	else if(input && input.action == "format_prices") {
		data.frequencySequence = [];
		var gr = new GlideRecord('sys_choice');
		gr.addQuery('name', 'sys_frequency');
		gr.orderBy('sequence');
		gr.query();
		while(gr.next())
			data.frequencySequence.push(gr.label.getDisplayValue());
		var spCurrencyFormatter = new SPCurrencyFormatter();
		data.frequencyMap = {};
		for(var key in input.prices)
			data.frequencyMap[key] = spCurrencyFormatter.format(input.prices[key]);
		return;
	}
	
	// portal can specify a catalog and category home page
	data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
	data.sc_category_page = $sp.getDisplayValue("sc_category_page") || "sc_category";
	data.sc_catalog = $sp.getDisplayValue('sc_catalog') ;

	var m = data.msgs = {};
	m.scHomeMsg = gs.getMessage("Service Catalog");
	m.step1 = gs.getMessage("Describe Needs");
	m.step2 = gs.getMessage("Choose Options");
	m.step3 = gs.getMessage("Summary");
	m.prevMsg = gs.getMessage("Previous");
	m.nextMsg = gs.getMessage("Next");
	m.submitMsg = gs.getMessage("Submit");
	m.orderNowMsg = gs.getMessage("Order Now");
	m.submittedMsg = gs.getMessage("Submitted");
	m.createdMsg = gs.getMessage("Created");
	m.clickMsg = gs.getMessage("click here to view");
	m.dialogTitle = gs.getMessage("Delete Attachment");
	m.dialogMessage = gs.getMessage("Are you sure?");
	m.dialogOK = gs.getMessage("OK");
	m.dialogCancel = gs.getMessage("Cancel");
	data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
	if (isNaN(data.maxAttachmentSize))
		data.maxAttachmentSize = 24;
	m.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
	m.renameSuccessMsg = gs.getMessage("Attachment renamed successfully");
	m.deleteSuccessMsg = gs.getMessage("Attachment deleted successfully");
	
	data.sys_id = $sp.getParameter("sys_id");

	if (options.sys_id)
		data.sys_id = options.sys_id;

	if (!data.sys_id)
		return;

	var validatedItem = new sn_sc.CatItem('' + data.sys_id);
  if (!validatedItem.canView())
    return;

	data.sys_properties = {
		twostep: gs.getProperty("glide.sc.sp.twostep", "true") == 'true',
		sc_layouts: gs.getProperty("glide.sc.use_cart_layouts", "true") == 'true'
	};

	data.showPrices = $sp.showCatalogPrices();
  data.sc_cat_item = $sp.getGuide(data.sys_id, true, false);
	if (data.sc_cat_item.category) {
		var categoryJS;
			var categoryID = data.sc_cat_item.category;
			if ($sp.getParameter("sysparm_category")) {
				categoryJS = new sn_sc.CatCategory($sp.getParameter("sysparm_category") + "");
				categoryID = $sp.getParameter("sysparm_category") + "";
			}
			else {
				categoryJS = new sn_sc.CatCategory(data.sc_cat_item.category);
			}
			data.category = {
				name: categoryJS.getTitle(),
				url: categoryJS.canView() ? '?id=' + data.sc_category_page + '&sys_id=' + categoryID : "#"
			}
			data.categories = [];
			data.categories.push({
				label: categoryJS.getTitle(),
				url: categoryJS.canView() ? '?id=' + data.sc_category_page + '&sys_id=' + categoryID : "#"
			});
			while(categoryJS && categoryJS.getParent()) {
				var parentId =  categoryJS.getParent();
				categoryJS = new sn_sc.CatCategory(parentId);
				var category = {
					label: categoryJS.getTitle(),
					url: categoryJS.canView() ? '?id=' + data.sc_category_page + '&sys_id=' + parentId : "#"
				};
				data.categories.unshift(category);
			}
	}

	$sp.logStat('Cat Item View', data.sc_cat_item.sys_class_name, data.sc_cat_item.sys_id, data.sc_cat_item.name);
})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-02-27 18:33:21</sys_created_on>
        <sys_id>5faaa921dbe4130064185901cf961927</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>SC Order Guide Sales Portal</sys_name>
        <sys_package display_value="Sales Operations" source="x_195792_sales_ope">bbdca111db50130064185901cf961984</sys_package>
        <sys_policy/>
        <sys_scope display_value="Sales Operations">bbdca111db50130064185901cf961984</sys_scope>
        <sys_update_name>sp_widget_5faaa921dbe4130064185901cf961927</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-27 18:39:37</sys_updated_on>
        <template><![CDATA[<div class="">
  <sp-widget widget="orderGuideModal" ng-if="orderGuideModal"></sp-widget>
	<div ng-if="::data.sc_cat_item" class="row">
		<div class="col-sm-12">
			<div class="panel panel-default">
				<div class="timeline-container b-b">
					<div class="wrapper-md break-word">
						<h1 class="h2 m-n font-thin" ng-if="::data.sc_cat_item.name">{{::data.sc_cat_item.name}}</h1>
             <div class="text-muted hidden-xs hidden-sm" ng-if="::data.sc_cat_item.short_description">{{::data.sc_cat_item.short_description}}</div>
					</div>
					<div class="wrapper-xs og-timeline b-t">
						<div class="iconlink col-sm-4 text-a-l pull-left-xs padding-left-xs" ng-class = "{'hidden-xs hidden-sm' : guide_step != 0, 'hidden-lg hidden-md' : options.compact_mode == 'true' && guide_step != 0, 'col-sm-6' : options.compact_mode == 'true' && guide_step == 0}" style="padding-left:61px">
							<div class="circle_icon" ng-class="guide_step == 0 ? 'step_active' : 'step_inactive'">
                <i class="fa fa-edit step-icon" style="left: -8px;"/>
              </div>
							<span class="text-muted m-l-sm step-text">{{m.step1}}</span>
						</div>
						<div class="iconlink col-sm-4 text-a-c pull-left-xs left-align-xs" ng-class = "{'hidden-xs hidden-sm' : guide_step != 1 , 'hidden-lg hidden-md' : options.compact_mode == 'true' && guide_step != 1, 'col-sm-6' : options.compact_mode == 'true' && guide_step == 1}">
              <div class="circle_icon" ng-class="guide_step == 1 ? 'step_active' : 'step_inactive'">
                <i class="fa fa-list step-icon"/>
              </div>
							<span class="text-muted m-l-sm step-text">{{m.step2}}</span>
						</div>
						<div class="iconlink col-sm-4 text-a-r pull-left-xs left-align-xs" ng-class = "{'hidden-xs hidden-sm' : guide_step != 2 , 'hidden-lg hidden-md' : options.compact_mode == 'true' && guide_step != 2, 'col-sm-6' : options.compact_mode == 'true' && guide_step == 2}" style="padding-right:61px">
              <div class="circle_icon" ng-class="guide_step == 2 ? 'step_active' : 'step_inactive'">
                <i class="fa fa-check step-icon" style="top: -10px;left: -9px;"/>
              </div>
							<span class="text-muted m-l-sm step-text">{{m.step3}}</span>
						</div>
					</div>
				</div>
				<div class="padder-md padder-t-md" ng-if="guide_step == 0">
          <div class="row">
            <div ng-if="::data.sc_cat_item.picture" class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
              <img class="img-responsive catalog-item-image guide-image" ng-src="{{::data.sc_cat_item.picture}}?t=medium" />
            </div>
            <div ng-if="data.sc_cat_item.description" class="col-xs-12 col-sm-12 col-md-9 col-lg-9 break-word">
              <div class="col-md-9 col-lg-9 visible-md visible-lg" ng-class="{false : 'visible-xs visible-sm', true : 'hidden-xs hidden-sm'}[options.show_less_orderguide === 'true']">	
              	<div class="m-t guide-description" ng-bind-html="::data.sc_cat_item.description"></div>
              </div>
              <div class="visible-xs visible-sm col-xs-12 col-sm-12" ng-if="::(options.show_less_orderguide === 'true')">
            		<sc-toggle-data sn-data="::data.sc_cat_item.description"></sc-toggle-data>
            	</div>
            </div>
	        </div>
					<div class="wrapper-md" ng-class="data.sc_cat_item.picture || data.sc_cat_item.description ? 'b-t' : ''">
						<sp-model form-model="data.sc_cat_item" mandatory="data.sc_cat_item._mandatory"></sp-model>
					</div>
				</div>
				<div ng-if="guide_step == 1">
          <div ng-if="evaluatingIncludes" class="include-loader">
            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
						<span class="sr-only">${Loading...}</span>
          </div>
					<div class="remove-margin-bottom-xs" ng-if="includedItems.length">
						<div class="list-group">
            <div class="pull-right text-xs"><i class="fa fa-asterisk mandatory"></i> <span class="text-muted">${Mandatory Fields}</span></div>
						<div class="m-b-lg font-bold">${Please select the items you wish to order: }</div>
             <uib-accordion close-others="true">
							<uib-accordion-group class="accordion-header b" template-url="group-template.html" ng-init="initAttachmentCallbacks($index);" ng-repeat="item in includedItems track by item.sys_id | orderBy: 'order'" id="{{::item.sys_id}}" is-open="item.isOpen">
                <uib-accordion-heading>
									<div class="row">
                    <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 font-bold align-text" id="item_name_{{::item.sys_id}}">
                      <img ng-if="::item.icon" ng-src="{{::item.icon}}" class="item-icon pad-right hidden-xs hidden-sm"/>
                      <span aria-role="heading" aria-level="3" class="break-word">{{::item.name}}</span>
                      <span class="fa accordion-icon pull-right-xs hidden-md hidden-lg" ng-class="item.isOpen ? 'fa-chevron-up' : 'fa-chevron-down'" title="{{item.isOpen ?'${Collapse}':'${Expand}'}}" aria-hidden="true"></span>
                    </div>
                    <div class="col-md-6 col-lg-6 hidden-xs hidden-sm align-text break-word" aria-hidden="true">
                      {{::item.short_description}}
                    </div>
                    <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 og-switch text-a-r pull-left-xs left-align-xs align-text"> 
                     <span class="hidden-sm hidden-xs pull-left options" ng-if="::item._sections.length > 0"> 
                       <i class="fa fa-asterisk mandatory" ng-if="item._mandatory.length && item.included"></i>
                       <i class="m-l-sm" ng-if="!item._mandatory.length || !item.included"></i>
                       ${Options}
                      </span>
                    	<div class="inline" ng-if="::showIncludeToggle">	
                        <div class="input-switch inline v-middle m-l" ng-click="$event.stopPropagation()" uib-tooltip="{{item.included ? '${Included}' : '${Not Included}'}}" tooltip-placement="top" tooltip-append-to-body="true">
                          <input type="checkbox"
                              ng-model="item.included"
                              tabindex="0"
                              aria-label="${Not Included}"
                              id="enable_switch_{{::item.sys_id}}"  />
                          <label class="switch" for="enable_switch_{{::item.sys_id}}" ng-click="toggleItemState(item)"></label>
                        </div>
                      </div>
                      <span class="visible-sm-inline-block visible-xs-inline-block options m-l-lg" ng-if="::item._sections.length > 0"> 
                       <i class="fa fa-asterisk mandatory" ng-if="item._mandatory.length && item.included"></i>
                       <i class="m-l-sm" ng-if="!item._mandatory.length || !item.included"></i>
                       ${Options}
                      </span>
	                    <span class="fa accordion-icon hidden-xs hidden-sm" ng-class="item.isOpen ? 'fa-chevron-up' : 'fa-chevron-down'" title="{{item.isOpen ?'${Collapse}':'${Expand}'}}" aria-hidden="true"></span>
                    </div>
                  </div>
                </uib-accordion-heading>
								<div id="item_details_{{::item.sys_id}}" role="region" aria-labelledby="{{::item.sys_id}}" sp-pause-child-watchers-if-hidden>
                  <div class="wrapper" style="position: relative; background-color: #F8F9F9;">
                    <div class="panel-body">
                      <div class="row m-b-lg">
                        <div class="col-xs-12 col-sm-12 hidden-md hidden-lg padder-b break-word" aria-hidden="true">
                      		{{::item.short_description}}
                          <div class="font-normal pull-right m-r-sm hidden-md hidden-lg" ng-if="data.showPrices && (item.price || item.recurring_price)">{{item.price}} + {{item.recurring_price}}</div>
                    		</div>
                        <div class="col-lg-3 col-md-3 hidden-xs hidden-sm" ng-if="::item.picture">
                        	<img ng-if="::item.picture" class="img-responsive catalog-item-image guide-item-image" ng-src="{{::item.picture}}" />  
                        </div>
                        <div class="col-lg-9 col-md-9 col-xs-12 col-sm-12">
                        	<div class="font-normal pull-right m-r-sm hidden-xs hidden-sm" ng-if="data.showPrices && (item.price || item.recurring_price)">{{item.price}} + {{item.recurring_price}}</div>
                          <img ng-if="::item.picture" class="img-responsive catalog-item-image guide-item-image-xs hidden-lg hidden-md" ng-src="{{::item.picture}}" />  
                        	<div ng-if="::item.description" class="m-t guide-description clearfix visible-md visible-lg break-word" ng-bind-html="::item.description" ng-class="::{false : 'visible-xs visible-sm', true : 'hidden-xs hidden-sm'}[options.show_less_orderguide === 'true']"></div>
                          	<div class="visible-xs visible-sm break-word" ng-if="::(options.show_less_orderguide === 'true')">
            								<sc-toggle-data sn-data="::item.description"></sc-toggle-data>
            							</div>
                        </div>
                      </div>
                        <fieldset ng-class="{'disabled-mask': !item.included}"></fieldset>
                        <sp-cat-item item="item" />
                        <sp-model form-model="item" mandatory="item._mandatory"></sp-model>
                        
                        <div>
                          <div ng-if="item.attachments.length" class="file-list-wrap">
                            <ul class="list-group" style="margin-bottom: 0; padding:0">
                              <li class="list-group-item" ng-repeat="attachment in item.attachments">
                                <div class="sp-attachment-block-single-line file-attachment row" id="{{::attachment.sys_id}}">
                                  <a aria-label="{{::(attachment.thumbSrc ? '${View attached image}' : '${Download attachment}')}}" tabindex="0" class="col-md-1 col-sm-1 col-xs-2 view-attachment m-b-none text-center" style="border: none;"
                                     ng-click="item.attachmentHandler.viewAttachment($event, attachment)" href="javascript:void(0)" title="View" >
                                    <img alt="" ng-if="attachment.thumbSrc" class="attachment-thumbnail img-responsive" ng-src="{{attachment.thumbSrc}}"/>
                                    <span ng-if="::!attachment.thumbSrc">
                                      <span class="glyphicon glyphicon-file text-2x"/>
                                    </span>
                                  </a>
                                  <div class="col-md-9 col-sm-8 col-xs-7 file-name v-middle">
                                    <a tabindex="0" class="get-attachment" ng-click="item.attachmentHandler.downloadAttachment(attachment)" ng-attr-title="${Download} {{::attachment.file_name}}" href="javascript:void(0)">
                                      {{::attachment.file_name}} ({{::attachment.size}})
                                    </a>
                                    <input tabindex="-1" ng-keydown="item.attachmentHandler.onKeyDown($event, attachment)" ng-blur="item.attachmentHandler.updateAttachment($event, attachment)" style="display: none;"/>
                                    <div>
                                      <time><sn-time-ago timestamp="::attachment.sys_updated_on" /></time>
                                    </div>
                                  </div>
                                  <div class="col-md-2 col-sm-3 col-xs-3 tools v-middle align-right">
                                    <div class="btn-group" ng-if="::(attachment.canWrite || attachment.canDelete)">
                                      <button type="button" tabindex="0" class="btn btn-default btn-clear" ng-click="item.attachmentHandler.editAttachment($event, attachment)" title="${Edit file name}" aria-label="${Edit file name}"><i class="fa fa-pencil" aria-hidden="true"></i></button>
                                      <button type="button" tabindex="0" class="btn btn-default btn-clear" ng-click="item.confirmDeleteAttachment(attachment, $event)" title="${Delete}" aria-label="${Delete}"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    </div>
                                  </div>
                                </div>
                              </li>
                            </ul>
                            <div class="errors-wrap" ng-hide="errorMessages.length == 0">
                              <div class="error-msg icon-cross" ng-repeat="error in errorMessages" ng-click="item.attachmentHandler.dismissMsg($event, $index, errorMessages)">
                                <span>{{error.msg}}</span>
                                <span class="file-name">{{error.fileName}}</span>
                              </div>
                            </div>
                          </div>
                          
                          <label ng-if="!submitted" class="attachment-label">
                            <span class="file-upload-input">
                              <input type="file" style="display: none" multiple="true" ng-file-select="item.attachmentHandler.onFileSelect($files)" class="sp-attachments-input"/>
                              <button title="" ng-click="item.attachmentHandler.openSelector($event)" class="panel-button sp-attachment-add btn btn-link" aria-label="${Add attachment}"><span class="glyphicon glyphicon-paperclip"></span></button>
                            </span>
                            <span style="padding-left:4px;">${Add attachments}</span>
                          </label>
                      </div>
										</div>
									</div>
								</div>
              </uib-accordion-group>
            </uib-accordion>
              <sp-message-dialog name="delete_attachment"
                         title="{{m.dialogTitle}}"
                         message="{{m.dialogMessage}}"
                         ok="{{m.dialogOK}}"
                         cancel="{{m.dialogCancel}}"
                         dialog-class="delete-dialog"></sp-message-dialog>
						</div>
					</div>
					<div class="empty-state-content" ng-if="includedItems.length == 0 && !evaluatingIncludes">
            			<h3>${Order Guide has no items to order}</h3>
          			</div>
				</div>
				<div ng-if="guide_step == 2">
					<div class="list-group">
						<table class="table table-striped m-b-sm light-border-bottom summary add-margin-bottom-xs" summary="${Summary of the guide}">
							<thead>
								<tr>
									<th class="wrapper-sm wrapper-cart-xs col-md-5 col-lg-5 col-xs-8 col-sm-8 border-bottom-xs" scope="col">${Order Guide Details}</th>
									<th class="wrapper-sm col-md-1 col-lg-1 text-a-c hidden-xs hidden-sm" scope="col">${Quantity}</th>
									<th class="wrapper-sm col-md-2 col-lg-2 text-a-c hidden-xs hidden-sm" scope="col">${Total Price}</th>
									<th class="wrapper-sm col-md-2 col-lg-2 text-a-c hidden-xs hidden-sm" scope="col">${Recurring}</th>
                  <th class="wrapper-sm wrapper-cart-xs col-md-2 col-lg-2 col-xs-4 col-sm-4 border-bottom-xs" scope="col" ng-hide="totalIncluded == includedItems.length" style="width:12%"></th>
								</tr>
							</thead>
							<tbody>
								<tr ng-repeat="item in ::includedItems track by item.sys_id| orderBy: 'order'" ng-class="::{'summary-excluded': !item.included}">
									<td class="wrapper-sm v-middle wrapper-cart-xs border-top-xs">
                    <span class="hidden-md hidden-lg">{{::item.quantity}} </span>
										<span class="wrap-word">{{::item.name}}</span>
									</td>
									<td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm">
										<span>{{::(data.sys_properties.sc_layouts || !item.no_quantity? item.quantity : '---')}}</span>
									</td>
									<td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm">
										<span><strong>{{::(data.showPrices && item.price_subtotal ? item.price_subtotal : '---')}}</strong></span>
									</td>
									<td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm">
										<span class="clearfix"><strong>{{::(data.showPrices && item.recurring_price_subtotal ? item.recurring_price_subtotal : '---')}}</strong></span>
										<span ng-if="::(data.showPrices && item.recurring_price_frequency)" style="font-size:10px">{{::item.recurring_price_frequency}}</span>
									</td>
                  <td class="wrapper-sm v-middle text-a-r wrapper-cart-xs border-top-xs" ng-hide="::(totalIncluded == includedItems.length)">
										<span ng-if="::!item.included" class="wrapper-xs not-included not-included-pill">${NOT INCLUDED}</span>
									</td>
								</tr>
							</tbody>
						</table>
						<div class="padder-v clearfix hidden-xs hidden-sm" style="padding-top: 25px !important">
							<button ng-disabled="submitted" name="order" ng-click="triggerSubmit()" class="btn btn-primary pull-right" sn-focus="guide_step == 2">${Order Now}</button>
              <button ng-disabled="submitted" name="prev" ng-click="goPrev()" class="btn btn-default pull-right m-r m-r-6">${Edit Options}</button>
							<button ng-disabled="submitted" name="add_to_cart" ng-click="triggerAddToCart()" class="btn btn-default pull-right m-r m-l m-r-6">${Add to Cart}</button>
							<div class="pull-right m-r-lg m-l wrapper-sm" ng-if="data.showPrices" style="top: -10px;position: relative;">
								<div class="pull-left"><strong>${Total} : </strong>
								</div>
								<div class="pull-left m-l-xs">
									<div><strong> {{price_display}}</strong>
									</div>
									<div ng-repeat="freq in ::frequencySequence">
										<span class="clearfix" ng-if="frequencyMap.hasOwnProperty(freq)" style="font-size:13px"> + {{(frequencyMap[freq] + ' ' + freq)}}</span>
									</div>
								</div>
							</div>
						</div>
            
            <div class="clearfix visible-xs visible-sm">
              <div class="pull-left m-r-lg m-b-sm" ng-if="::data.showPrices">
								<div class="pull-left"><strong>${Total : }</strong>
								</div>
								<div class="pull-left m-l-xs">
									<div><strong> {{price_display}}</strong>
									<div ng-repeat="freq in ::frequencySequence">
										<span class="clearfix" ng-if="frequencyMap.hasOwnProperty(freq)" style="font-size:13px"> + {{(frequencyMap[freq] + ' ' + freq)}}</span>
									</div>
									</div>
								</div>
							</div>
            	<button ng-disabled="submitted" name="add_to_cart" ng-click="triggerAddToCart()" class="btn btn-default m-b-sm col-xs-12">
                  ${Add to Cart}</button>
              <button ng-disabled="submitted" name="prev" ng-click="goPrev()" class="btn btn-default m-b-sm col-xs-12">
                  ${Edit Options}</button>
              <button ng-disabled="submitted" name="order" ng-click="triggerSubmit()" class="btn btn-primary col-xs-12" sn-focus="guide_step == 2">
                  ${Order Now}</button>
            </div>
            
					</div>
				</div>
				<div class="guide-nav" ng-hide="evaluatingIncludes || guide_step == 2" ng-class="{'guide-nav-setp1': guide_step == 1}">
					<button id="submit" ng-hide="guide_step > 1" ng-disabled="submitted || data.sc_cat_item._mandatory.length > 0 || (totalIncluded <= 0 && guide_step != 0)" name="submit" ng-click="goNext()" class="btn btn-primary padder-lg pull-right" sn-focus="guide_step < 2">{{::m.nextMsg}}</button>
					<button ng-hide="guide_step != 1 || submitted" name="submit" ng-click="goPrev()" class="btn btn-default padder pull-right pull-left-xs" ng-class="{'m-r-6': guide_step < 2}">{{::m.prevMsg}}</button>
				</div>
			</div>
		</div>
	</div>
	<div ng-if="::!data.sc_cat_item">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h4 class="panel-title">${Item not found}</h4>
			</div>
			<div class="panel-body wrapper">
				<p>${This item is not found or currently not available}</p>
				<p>${Suggestions}:</p>
				<ul>
					<li>${Try searching for the item}</li>
					<li>${Go to the Service Catalog homepage}</li>
				</ul>
			</div>
		</div>
	</div>
</div>

<now-message key="Items have been added successfully" value="${Items have been added successfully}"/>
<now-message key="Catalog Home" value="${Catalog Home}"/>
<now-message key="View Cart" value="${View Cart}"/>

<script type="text/ng-template" id="group-template.html">
   <div>
    <div class="panel-heading">
      <div class="panel-title">
        <div tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" uib-accordion-transclude="heading">
          <span uib-accordion-header>
          </span>
        </div>
  		</div>
  	</div>
    <div class="panel-collapse collapse" uib-collapse="!isOpen">
      <div ng-transclude></div>
  	</div>
  </div>
  </script>]]></template>
    </sp_widget>
</record_update>
